////
/// @group foundation
/// Utility functions and mixins for foundation.
////

/// Get the foundation page gutter for all breakpoints, as values for specific properties. Useful for fixing items to the edge of a grid container.
/// @param {Keyword|List} $properties - A list or single property to print the the negative gutters for.
/// @param {String} $negative - Print negative values of the gutter.
@mixin foundation-gutter($properties, $negative: true) {
  $sign: '';
  @if $negative {
    $sign: '-';
  }
  @each $breakpoint, $padding in $grid-container-padding {
    @include breakpoint($breakpoint) {
      @each $property in $properties {
        #{$property}: #{$sign}#{calc(#{rem-calc($padding)} / 2)};
      }
    }
  }
}

/// Get the foundation page gutter for a specific breakpoint. The value is the width of a single gutter.
/// @param {String} $breakpoint - The breakpoint to get the gutter for.
@function foundation-gutter($breakpoint) {
  @return calc(#{rem-calc(map-get($grid-container-padding, $breakpoint))} / 2);
}

/// Get the foundation page gutters for a specific breakpoint. The value is the width of a both gutters.
/// @param {String} $breakpoint - The breakpoint to get the gutters for.
@function foundation-gutters($breakpoint) {
  @return rem-calc(map-get($grid-container-padding, $breakpoint));
}

/// Generate grid columns on a selector.
/// @param {Boolean} $-up-screens - The breakpoint to use?
/// @todo Needs work, is this even a good idea with XY Grid?
/// Source: https://foundation.zurb.com/forum/posts/1026-include-multiple-column-mixins
@mixin grid-columns(
  $small-up-screens: false,
  $medium-up-screens: false,
  $large-up-screens: false,
  $xlarge-up-screens: false,
  $xxlarge-up-screens: false,
  $small-only-screens: false,
  $medium-only-screens: false,
  $large-only-screens: false,
  $xlarge-only-screens: false,
  $xxlarge-only-screens: false
) {
  // Small and up screens
  @if $small-up-screens {
    @include grid-column($small-up-screens);
  }
  // Medium and up screens
  @if $medium-up-screens {
    @include breakpoint(medium) {
      @include grid-column($medium-up-screens);
    }
  }
  // Large and up screens
  @if $large-up-screens {
    @include breakpoint(large) {
      @include grid-column($large-up-screens);
    }
  }
  // XLarge and up screens
  @if $xlarge-up-screens {
    @include breakpoint(xlarge) {
      @include grid-column($xlarge-up-screens);
    }
  }
  // XXLarge and up screens
  @if $xxlarge-up-screens {
    @include breakpoint(xxlarge) {
      @include grid-column($xxlarge-up-screens);
    }
  }
  // Small only screens
  @if $small-only-screens {
    @include breakpoint(small only) {
      @include grid-column($small-only-screens);
    }
  }
  // Medium only screens
  @if $medium-only-screens {
    @include breakpoint(medium only) {
      @include grid-column($medium-only-screens);
    }
  }
  // Large only screens
  @if $large-only-screens {
    @include breakpoint(large only) {
      @include grid-column($large-only-screens);
    }
  }
  // XLarge only screens
  @if $xlarge-only-screens {
    @include breakpoint(xlarge only) {
      @include grid-column($xlarge-only-screens);
    }
  }
  // XXLarge only screens
  @if $xxlarge-only-screens {
    @include breakpoint(xxlarge only) {
      @include grid-column($xxlarge-only-screens);
    }
  }
}
