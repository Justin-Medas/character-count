////
/// @group spacing
/// Global spacing variables.
////

$spacing--4xsmall: rem-calc(5);
$spacing--3xsmall: rem-calc(10);
$spacing--2xsmall: rem-calc(15);
$spacing--xsmall:	rem-calc(20);
$spacing--small: rem-calc(30);
$spacing--medium: rem-calc(40);
$spacing--default: rem-calc(50);
$spacing--large: rem-calc(60);
$spacing--xlarge:	rem-calc(80);
$spacing--2xlarge:	rem-calc(100);
$spacing--3xlarge: rem-calc(120);
$spacing--4xlarge: rem-calc(150);

/// Global Spacing Maps. Grouping cutom spacing variables into responsive behaviors
/// @type Map
$global-spacing: (
  /* 50/100/150 */
  4xlarge: (
    initial: $spacing--default,
    medium: $spacing--2xlarge,
    large: $spacing--4xlarge,
  ),
  /* 50/80/120 */
  3xlarge: (
    initial: $spacing--default,
    medium: $spacing--xlarge,
    large: $spacing--3xlarge,
  ),
  /* 50/80/100 */
  2xlarge: (
    initial: $spacing--medium,
    medium: $spacing--default,
    large: $spacing--2xlarge,
  ),
  /* 40/50/80 */
  xlarge: (
    initial: $spacing--medium,
    medium: $spacing--default,
    large: $spacing--xlarge,
  ),
  /* 40/50/60 */
  large: (
    initial: $spacing--medium,
    medium: $spacing--default,
    large: $spacing--large,
  ),
  /* 40/50/50 */
  default: (
    initial: $spacing--medium,
    large: $spacing--default,
  ),
  /* 30/40/40 */
  medium: (
    initial: $spacing--small,
    large: $spacing--medium,
  ),
  /* 20/30/30 */
  small: (
    initial: $spacing--xsmall,
    medium: $spacing--small,
  ),
  /* 20/20/20 */
  xsmall: (
    initial: $spacing--xsmall,
  ),
  /* 15/15/15 */
  2xsmall: (
    initial: $spacing--2xsmall,
  ),
  /* 10/10/10 */
  3xsmall: (
    initial: $spacing--3xsmall
  ),
  /* 5/5/5 */
  4xsmall: (
    initial: $spacing--4xsmall
  ),
);

/// Generate global spacing rules.
/// @param {String} $size - The size of the global spacing rules to generate.
/// @param {String|List} $properties - The properties to apply the spacing to.
/// @example scss - Pass a size defined in spacing maps, and any css rules it should be applied to
///   .block {
///     @include global-spacing(medium, margin-top padding left);
///   }

@mixin global-spacing($size, $properties) {
  @each $breakpoint, $spacing in map-get($global-spacing, $size) {
    @include breakpoint($breakpoint) {
      @each $type in $properties {
        #{$type}: #{$spacing};
      }
    }
  }
}

/// Generate a single global spacing rule.
///
/// @param {String} $size - The size of the global spacing rules to generate.
/// @param {String} $breakpoint - The Foundation breakpoint value to get.

@function global-spacing($size, $breakpoint) {
  $spacing: map-get($global-spacing, $size);
  @return map-get($spacing, $breakpoint);
}

/// Create global spacing classes for margin-top.
/// @see config at top of file for names and values.

@each $size, $values in $global-spacing {

  .global-spacing--#{$size},
  %global-spacing--#{$size} {

    @include global-spacing($size, margin-top);
  }
}

/// Create global padding classes.
@each $size, $values in $global-spacing {

  .global-padding--#{$size},
  %global-padding--#{$size} {

    @include global-spacing($size, padding-top);
    @include global-spacing($size, padding-bottom);
  }
}
